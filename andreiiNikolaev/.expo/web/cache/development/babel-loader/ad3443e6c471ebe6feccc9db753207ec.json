{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Header from \"./components/Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  var colorBackground = function colorBackground() {\n    return setColors([].concat(_toConsumableArray(colors), [randomRgb()]));\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Header, {}), _jsxs(View, {\n      style: styles.elementStyle,\n      children: [_jsx(TouchableOpacity, {\n        onPress: colorBackground,\n        children: _jsx(Text, {\n          style: styles.textStyle,\n          children: \"Header\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: colorBackground,\n        children: _jsx(Text, {\n          style: styles.textStyle,\n          children: \"Text\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: colorBackground,\n        children: _jsx(Text, {\n          style: styles.textStyle,\n          children: \"Background\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: randomRgb\n  },\n  elementStyle: {\n    top: 80,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textStyle: {\n    fontSize: 50,\n    paddingTop: 70\n  }\n});\n\nvar randomRgb = function randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n};","map":{"version":3,"sources":["C:/Users/andrei/Desktop/учеба/react/MR/lab1/App.js"],"names":["React","useState","Header","App","colors","setColors","colorBackground","randomRgb","styles","container","elementStyle","textStyle","StyleSheet","create","flex","backgroundColor","top","alignItems","justifyContent","fontSize","paddingTop","red","Math","floor","random","green","blue"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;AAEA,OAAOC,MAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAE5B,kBAA4BF,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,WAAMD,SAAS,8BAAKD,MAAL,IAAaG,SAAS,EAAtB,GAAf;AAAA,GAAxB;;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,MAAD,KADF,EAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA,iBACE,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAEJ,eAA3B;AAAA,kBACC,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEE,MAAM,CAACG,SAApB;AAAA;AAAA;AADD,QADF,EAIE,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAEL,eAA3B;AAAA,kBACC,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEE,MAAM,CAACG,SAApB;AAAA;AAAA;AADD,QAJF,EAOE,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAEL,eAA3B;AAAA,kBACC,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEE,MAAM,CAACG,SAApB;AAAA;AAAA;AADD,QAPF;AAAA,MAFJ;AAAA,IADF;AAgBD;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACRK,IAAAA,IAAI,EAAE,CADE;AAETC,IAAAA,eAAe,EAAER;AAFR,GADoB;AAM/BG,EAAAA,YAAY,EAAE;AACZM,IAAAA,GAAG,EAAE,EADO;AAEZC,IAAAA,UAAU,EAAE,QAFA;AAGZC,IAAAA,cAAc,EAAE;AAHJ,GANiB;AAY/BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,UAAU,EAAE;AAFL;AAZoB,CAAlB,CAAf;;AAoBA,IAAMb,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMc,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACD,CAJD","sourcesContent":["import React,{useState} from 'react';\nimport {StyleSheet,Text, TouchableOpacity, View} from 'react-native';\nimport Header from './components/Header';\n\nexport default function App() {\n\n  const [colors, setColors] = useState([]);\n  const colorBackground = () => setColors([...colors, randomRgb()]);\n  \n  return (\n    <View style={styles.container}>\n      <Header />\n        <View style={styles.elementStyle}>\n          <TouchableOpacity onPress={colorBackground}>\n           <Text style={styles.textStyle}>Header</Text>\n          </TouchableOpacity>            \n          <TouchableOpacity onPress={colorBackground}>\n           <Text style={styles.textStyle}>Text</Text>\n          </TouchableOpacity>       \n          <TouchableOpacity onPress={colorBackground}>\n           <Text style={styles.textStyle}>Background</Text>\n          </TouchableOpacity>        \n        </View>\n    </View>    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n     flex: 1,\n    backgroundColor: randomRgb,\n    \n  },\n  elementStyle: {\n    top: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n            \n  },\n  textStyle: {\n      fontSize: 50,\n      paddingTop: 70,\n      },\n\n}\n)\n\nconst randomRgb = () => {\n  const red = Math.floor(Math.random() * 256);\n  const green = Math.floor(Math.random() * 256);\n  const blue = Math.floor(Math.random() * 256);\n}"]},"metadata":{},"sourceType":"module"}